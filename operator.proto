syntax = "proto3";
option go_package = "github.com/tdex-network/tdex-protobuf/generated/go/operator";

import "types.proto";

/**
 * Service for operators to configure and manage a TDEX daemon
 */
service Operator {
  // Returns a new derived address for the given market.
  // If market field is empty, a new Market is created and MUST be initialized.
  rpc DepositAddress(DepositAddressRequest) returns (DepositAddressReply) {}

  // Returns the list of previously generated addresses for the given market.
  rpc ListDepositAddress(ListDepositAddressRequest)
      returns (ListDepositAddressReply) {}

  // Returns a new derived address from the fee account.
  // This is only used to deposit some LBTC to subsidize blockchain fees.
  rpc FeeDepositAddress(FeeDepositAddressRequest)
      returns (FeeDepositAddressReply) {}

  // Returns the aggregated balance of LBTC held in the fee account.
  rpc FeeBalance(FeeBalanceRequest) returns (FeeBalanceReply) {}

  // Makes the given market tradable
  rpc OpenMarket(OpenMarketRequest) returns (OpenMarketReply) {}
  // Makes the given market NOT tradabale
  rpc CloseMarket(CloseMarketRequest) returns (CloseMarketReply) {}

  // Changes the fee for the given market.
  // The Market MUST be closed before doing this change.
  rpc UpdateFee(UpdateFeeRequest) returns (UpdateFeeReply) {}
}

message DepositAddressRequest {
  Market market = 1; // Market to get an address from. Could be empty.
}
message ListDepositAddressRequest {
  Market market = 1; // Market to get an address from. Could be empty.
}
message ListDepositAddressReply { repeated string address = 1; }
message DepositAddressReply { string address = 1; }
message FeeDepositAddressRequest {}
message FeeDepositAddressReply { string address = 1; }
message FeeBalanceRequest {}
message FeeBalanceReply { int64 balance = 1; }

message OpenMarketRequest {}
message OpenMarketReply {}
message CloseMarketRequest {}
message CloseMarketReply {}

message UpdateFeeRequest {}
message UpdateFeeReply {}
