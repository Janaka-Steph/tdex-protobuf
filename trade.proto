syntax = "proto3";
option go_package = "github.com/tdex-network/tdex-protobuf/generated/go/trade";

import "swap.proto";
import "types.proto";

service Trade {
  // Trader interface
  rpc Markets(MarketsRequest) returns (MarketsReply);
  rpc Balances(BalancesRequest) returns (BalancesReply);
  rpc MarketPrice(MarketPriceRequest) returns (MarketPriceReply);
  rpc TradePropose(TradeProposeRequest) returns (stream TradeProposeReply);
  rpc TradeComplete(TradeCompleteRequest) returns (stream TradeCompleteReply);
}

// BOTD#4 Service's messages
message MarketsRequest {}
message MarketsReply { repeated MarketWithFee markets = 1; }

message BalancesRequest { Market market = 1; }
message BalancesReply { repeated BalanceWithFee balances = 1; }

message MarketPriceRequest { Market market = 1; }
message MarketPriceReply { repeated PriceWithFee prices = 1; }

message TradeProposeRequest {
  Market market = 1;
  enum Type {
    BUY = 0;
    SELL = 1;
  }
  Type type = 2;
  SwapRequest swap_request = 3;
}
message TradeProposeReply {
  SwapAccept swap_accept = 1;
  SwapFail swap_fail = 2;
  uint64 expiry_time_unix = 3;
}

message TradeCompleteRequest {
  SwapComplete swap_complete = 1;
  SwapFail swap_fail = 2;
}
message TradeCompleteReply { string txid = 1; }
