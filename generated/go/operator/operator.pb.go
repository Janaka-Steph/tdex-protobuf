// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: operator.proto

package operator

import (
	proto "github.com/golang/protobuf/proto"
	types "github.com/tdex-network/tdex-protobuf/generated/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Custom types
type SwapStatus int32

const (
	SwapStatus_UNDEFINED SwapStatus = 0
	SwapStatus_REQUEST   SwapStatus = 1
	SwapStatus_ACCEPT    SwapStatus = 2
	SwapStatus_COMPLETE  SwapStatus = 3
)

// Enum value maps for SwapStatus.
var (
	SwapStatus_name = map[int32]string{
		0: "UNDEFINED",
		1: "REQUEST",
		2: "ACCEPT",
		3: "COMPLETE",
	}
	SwapStatus_value = map[string]int32{
		"UNDEFINED": 0,
		"REQUEST":   1,
		"ACCEPT":    2,
		"COMPLETE":  3,
	}
)

func (x SwapStatus) Enum() *SwapStatus {
	p := new(SwapStatus)
	*p = x
	return p
}

func (x SwapStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_enumTypes[0].Descriptor()
}

func (SwapStatus) Type() protoreflect.EnumType {
	return &file_operator_proto_enumTypes[0]
}

func (x SwapStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapStatus.Descriptor instead.
func (SwapStatus) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{0}
}

type DepositMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to get an address from. Could be empty.
}

func (x *DepositMarketRequest) Reset() {
	*x = DepositMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositMarketRequest) ProtoMessage() {}

func (x *DepositMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositMarketRequest.ProtoReflect.Descriptor instead.
func (*DepositMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{0}
}

func (x *DepositMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type DepositMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DepositMarketReply) Reset() {
	*x = DepositMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositMarketReply) ProtoMessage() {}

func (x *DepositMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositMarketReply.ProtoReflect.Descriptor instead.
func (*DepositMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{1}
}

func (x *DepositMarketReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListDepositMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to get an address from. Could be empty.
}

func (x *ListDepositMarketRequest) Reset() {
	*x = ListDepositMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositMarketRequest) ProtoMessage() {}

func (x *ListDepositMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositMarketRequest.ProtoReflect.Descriptor instead.
func (*ListDepositMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{2}
}

func (x *ListDepositMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type ListDepositMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *ListDepositMarketReply) Reset() {
	*x = ListDepositMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositMarketReply) ProtoMessage() {}

func (x *ListDepositMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositMarketReply.ProtoReflect.Descriptor instead.
func (*ListDepositMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{3}
}

func (x *ListDepositMarketReply) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type DepositFeeAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DepositFeeAccountRequest) Reset() {
	*x = DepositFeeAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFeeAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFeeAccountRequest) ProtoMessage() {}

func (x *DepositFeeAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFeeAccountRequest.ProtoReflect.Descriptor instead.
func (*DepositFeeAccountRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{4}
}

type DepositFeeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DepositFeeAccountReply) Reset() {
	*x = DepositFeeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFeeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFeeAccountReply) ProtoMessage() {}

func (x *DepositFeeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFeeAccountReply.ProtoReflect.Descriptor instead.
func (*DepositFeeAccountReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{5}
}

func (x *DepositFeeAccountReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type BalanceFeeAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BalanceFeeAccountRequest) Reset() {
	*x = BalanceFeeAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceFeeAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceFeeAccountRequest) ProtoMessage() {}

func (x *BalanceFeeAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceFeeAccountRequest.ProtoReflect.Descriptor instead.
func (*BalanceFeeAccountRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{6}
}

type BalanceFeeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceFeeAccountReply) Reset() {
	*x = BalanceFeeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceFeeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceFeeAccountReply) ProtoMessage() {}

func (x *BalanceFeeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceFeeAccountReply.ProtoReflect.Descriptor instead.
func (*BalanceFeeAccountReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{7}
}

func (x *BalanceFeeAccountReply) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type OpenMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to be made tradable
}

func (x *OpenMarketRequest) Reset() {
	*x = OpenMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketRequest) ProtoMessage() {}

func (x *OpenMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketRequest.ProtoReflect.Descriptor instead.
func (*OpenMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{8}
}

func (x *OpenMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type OpenMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenMarketReply) Reset() {
	*x = OpenMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketReply) ProtoMessage() {}

func (x *OpenMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketReply.ProtoReflect.Descriptor instead.
func (*OpenMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{9}
}

type CloseMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to be made NOT tradable
}

func (x *CloseMarketRequest) Reset() {
	*x = CloseMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketRequest) ProtoMessage() {}

func (x *CloseMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketRequest.ProtoReflect.Descriptor instead.
func (*CloseMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{10}
}

func (x *CloseMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type CloseMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseMarketReply) Reset() {
	*x = CloseMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketReply) ProtoMessage() {}

func (x *CloseMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketReply.ProtoReflect.Descriptor instead.
func (*CloseMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{11}
}

type UpdateMarketFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketWithFee *types.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketFeeRequest) Reset() {
	*x = UpdateMarketFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFeeRequest) ProtoMessage() {}

func (x *UpdateMarketFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketFeeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateMarketFeeRequest) GetMarketWithFee() *types.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketFeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketWithFee *types.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketFeeReply) Reset() {
	*x = UpdateMarketFeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFeeReply) ProtoMessage() {}

func (x *UpdateMarketFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFeeReply.ProtoReflect.Descriptor instead.
func (*UpdateMarketFeeReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateMarketFeeReply) GetMarketWithFee() *types.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Market to update the price of
	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// Price to be updated
	Price *types.Price `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateMarketPriceRequest) Reset() {
	*x = UpdateMarketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceRequest) ProtoMessage() {}

func (x *UpdateMarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateMarketPriceRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPriceRequest) GetPrice() *types.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type UpdateMarketPriceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketPriceReply) Reset() {
	*x = UpdateMarketPriceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceReply) ProtoMessage() {}

func (x *UpdateMarketPriceReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceReply.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{15}
}

type WithdrawMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Market from which funds need to be withdrawn
	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// Amount for base and quote asset to be withdrawn
	BalanceToWithdraw *types.Balance `protobuf:"bytes,2,opt,name=balance_to_withdraw,json=balanceToWithdraw,proto3" json:"balance_to_withdraw,omitempty"`
	// The number of satoshis per kilo weight that should be
	// used when crafting this transaction.
	SatPerKw int64 `protobuf:"varint,3,opt,name=sat_per_kw,json=satPerKw,proto3" json:"sat_per_kw,omitempty"`
	// The script of the output being spent.
	Script []byte `protobuf:"bytes,4,opt,name=script,proto3" json:"script,omitempty"`
	// Optional: if true the transaction will be pushed to the network
	Push bool `protobuf:"varint,5,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *WithdrawMarketRequest) Reset() {
	*x = WithdrawMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketRequest) ProtoMessage() {}

func (x *WithdrawMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{16}
}

func (x *WithdrawMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *WithdrawMarketRequest) GetBalanceToWithdraw() *types.Balance {
	if x != nil {
		return x.BalanceToWithdraw
	}
	return nil
}

func (x *WithdrawMarketRequest) GetSatPerKw() int64 {
	if x != nil {
		return x.SatPerKw
	}
	return 0
}

func (x *WithdrawMarketRequest) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *WithdrawMarketRequest) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

type WithdrawMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The serialized transaction
	RawTx []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
}

func (x *WithdrawMarketReply) Reset() {
	*x = WithdrawMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketReply) ProtoMessage() {}

func (x *WithdrawMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketReply.ProtoReflect.Descriptor instead.
func (*WithdrawMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{17}
}

func (x *WithdrawMarketReply) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

type ListSwapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SwapStatus `protobuf:"varint,1,opt,name=status,proto3,enum=SwapStatus" json:"status,omitempty"`
}

func (x *ListSwapsRequest) Reset() {
	*x = ListSwapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwapsRequest) ProtoMessage() {}

func (x *ListSwapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwapsRequest.ProtoReflect.Descriptor instead.
func (*ListSwapsRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{18}
}

func (x *ListSwapsRequest) GetStatus() SwapStatus {
	if x != nil {
		return x.Status
	}
	return SwapStatus_UNDEFINED
}

type ListSwapsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swaps []*SwapInfo `protobuf:"bytes,1,rep,name=swaps,proto3" json:"swaps,omitempty"`
}

func (x *ListSwapsReply) Reset() {
	*x = ListSwapsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwapsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwapsReply) ProtoMessage() {}

func (x *ListSwapsReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwapsReply.ProtoReflect.Descriptor instead.
func (*ListSwapsReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{19}
}

func (x *ListSwapsReply) GetSwaps() []*SwapInfo {
	if x != nil {
		return x.Swaps
	}
	return nil
}

type ReportMarketFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to be updated
}

func (x *ReportMarketFeeRequest) Reset() {
	*x = ReportMarketFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMarketFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMarketFeeRequest) ProtoMessage() {}

func (x *ReportMarketFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMarketFeeRequest.ProtoReflect.Descriptor instead.
func (*ReportMarketFeeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{20}
}

func (x *ReportMarketFeeRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type ReportMarketFeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of the all unique fee being collected on each swap.
	CollectedFees []*types.Fee `protobuf:"bytes,1,rep,name=collected_fees,json=collectedFees,proto3" json:"collected_fees,omitempty"`
	// Map of aggreagated fee count grouped by asset. There should be one unique
	// entry for each asset and the amount should be the aggregated total.
	TotalCollectedFeesPerAsset map[string]int64 `protobuf:"bytes,2,rep,name=total_collected_fees_per_asset,json=totalCollectedFeesPerAsset,proto3" json:"total_collected_fees_per_asset,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ReportMarketFeeReply) Reset() {
	*x = ReportMarketFeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMarketFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMarketFeeReply) ProtoMessage() {}

func (x *ReportMarketFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMarketFeeReply.ProtoReflect.Descriptor instead.
func (*ReportMarketFeeReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{21}
}

func (x *ReportMarketFeeReply) GetCollectedFees() []*types.Fee {
	if x != nil {
		return x.CollectedFees
	}
	return nil
}

func (x *ReportMarketFeeReply) GetTotalCollectedFeesPerAsset() map[string]int64 {
	if x != nil {
		return x.TotalCollectedFeesPerAsset
	}
	return nil
}

type SwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SwapStatus `protobuf:"varint,1,opt,name=status,proto3,enum=SwapStatus" json:"status,omitempty"`
	// The proposer's quantity
	AmountP uint64 `protobuf:"varint,2,opt,name=amount_p,json=amountP,proto3" json:"amount_p,omitempty"`
	// The proposer's asset hash
	AssetP string `protobuf:"bytes,3,opt,name=asset_p,json=assetP,proto3" json:"asset_p,omitempty"`
	// The responder's quantity
	AmountR uint64 `protobuf:"varint,4,opt,name=amount_r,json=amountR,proto3" json:"amount_r,omitempty"`
	// The responder's asset hash
	AssetR string `protobuf:"bytes,5,opt,name=asset_r,json=assetR,proto3" json:"asset_r,omitempty"`
	// The collected fee on the current swap.
	MarketFee *types.Fee `protobuf:"bytes,6,opt,name=market_fee,json=marketFee,proto3" json:"market_fee,omitempty"`
	// SwapRequest timestamp
	RequestTimeUnix uint64 `protobuf:"varint,7,opt,name=request_time_unix,json=requestTimeUnix,proto3" json:"request_time_unix,omitempty"`
	// SwapAccpet timestamp
	AcceptTimeUnix uint64 `protobuf:"varint,8,opt,name=accept_time_unix,json=acceptTimeUnix,proto3" json:"accept_time_unix,omitempty"`
	// SwapComplete timestap
	CompleteTimeUnix uint64 `protobuf:"varint,9,opt,name=complete_time_unix,json=completeTimeUnix,proto3" json:"complete_time_unix,omitempty"`
}

func (x *SwapInfo) Reset() {
	*x = SwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInfo) ProtoMessage() {}

func (x *SwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInfo.ProtoReflect.Descriptor instead.
func (*SwapInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{22}
}

func (x *SwapInfo) GetStatus() SwapStatus {
	if x != nil {
		return x.Status
	}
	return SwapStatus_UNDEFINED
}

func (x *SwapInfo) GetAmountP() uint64 {
	if x != nil {
		return x.AmountP
	}
	return 0
}

func (x *SwapInfo) GetAssetP() string {
	if x != nil {
		return x.AssetP
	}
	return ""
}

func (x *SwapInfo) GetAmountR() uint64 {
	if x != nil {
		return x.AmountR
	}
	return 0
}

func (x *SwapInfo) GetAssetR() string {
	if x != nil {
		return x.AssetR
	}
	return ""
}

func (x *SwapInfo) GetMarketFee() *types.Fee {
	if x != nil {
		return x.MarketFee
	}
	return nil
}

func (x *SwapInfo) GetRequestTimeUnix() uint64 {
	if x != nil {
		return x.RequestTimeUnix
	}
	return 0
}

func (x *SwapInfo) GetAcceptTimeUnix() uint64 {
	if x != nil {
		return x.AcceptTimeUnix
	}
	return 0
}

func (x *SwapInfo) GetCompleteTimeUnix() uint64 {
	if x != nil {
		return x.CompleteTimeUnix
	}
	return 0
}

var File_operator_proto protoreflect.FileDescriptor

var file_operator_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a,
	0x14, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x11, 0x0a,
	0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x35, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x50, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0x4e, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0x59, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a,
	0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x61, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x6b, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x61, 0x74,
	0x50, 0x65, 0x72, 0x4b, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73,
	0x68, 0x22, 0x2c, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x22,
	0x37, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x77,
	0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x77, 0x61, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73, 0x22, 0x39, 0x0a, 0x16, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2b, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x1e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x73, 0x50, 0x65,
	0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x1a, 0x4d, 0x0a, 0x1f, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x02, 0x0a, 0x08, 0x53, 0x77, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x12, 0x23, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69,
	0x78, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x2a, 0x42, 0x0a, 0x0a, 0x53, 0x77, 0x61,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x32, 0xe3, 0x05,
	0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0d, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x19,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46,
	0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x4f, 0x70,
	0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x13, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x12, 0x17, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74,
	0x64, 0x65, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_operator_proto_rawDescOnce sync.Once
	file_operator_proto_rawDescData = file_operator_proto_rawDesc
)

func file_operator_proto_rawDescGZIP() []byte {
	file_operator_proto_rawDescOnce.Do(func() {
		file_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_operator_proto_rawDescData)
	})
	return file_operator_proto_rawDescData
}

var file_operator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_operator_proto_goTypes = []interface{}{
	(SwapStatus)(0),                  // 0: SwapStatus
	(*DepositMarketRequest)(nil),     // 1: DepositMarketRequest
	(*DepositMarketReply)(nil),       // 2: DepositMarketReply
	(*ListDepositMarketRequest)(nil), // 3: ListDepositMarketRequest
	(*ListDepositMarketReply)(nil),   // 4: ListDepositMarketReply
	(*DepositFeeAccountRequest)(nil), // 5: DepositFeeAccountRequest
	(*DepositFeeAccountReply)(nil),   // 6: DepositFeeAccountReply
	(*BalanceFeeAccountRequest)(nil), // 7: BalanceFeeAccountRequest
	(*BalanceFeeAccountReply)(nil),   // 8: BalanceFeeAccountReply
	(*OpenMarketRequest)(nil),        // 9: OpenMarketRequest
	(*OpenMarketReply)(nil),          // 10: OpenMarketReply
	(*CloseMarketRequest)(nil),       // 11: CloseMarketRequest
	(*CloseMarketReply)(nil),         // 12: CloseMarketReply
	(*UpdateMarketFeeRequest)(nil),   // 13: UpdateMarketFeeRequest
	(*UpdateMarketFeeReply)(nil),     // 14: UpdateMarketFeeReply
	(*UpdateMarketPriceRequest)(nil), // 15: UpdateMarketPriceRequest
	(*UpdateMarketPriceReply)(nil),   // 16: UpdateMarketPriceReply
	(*WithdrawMarketRequest)(nil),    // 17: WithdrawMarketRequest
	(*WithdrawMarketReply)(nil),      // 18: WithdrawMarketReply
	(*ListSwapsRequest)(nil),         // 19: ListSwapsRequest
	(*ListSwapsReply)(nil),           // 20: ListSwapsReply
	(*ReportMarketFeeRequest)(nil),   // 21: ReportMarketFeeRequest
	(*ReportMarketFeeReply)(nil),     // 22: ReportMarketFeeReply
	(*SwapInfo)(nil),                 // 23: SwapInfo
	nil,                              // 24: ReportMarketFeeReply.TotalCollectedFeesPerAssetEntry
	(*types.Market)(nil),             // 25: Market
	(*types.MarketWithFee)(nil),      // 26: MarketWithFee
	(*types.Price)(nil),              // 27: Price
	(*types.Balance)(nil),            // 28: Balance
	(*types.Fee)(nil),                // 29: Fee
}
var file_operator_proto_depIdxs = []int32{
	25, // 0: DepositMarketRequest.market:type_name -> Market
	25, // 1: ListDepositMarketRequest.market:type_name -> Market
	25, // 2: OpenMarketRequest.market:type_name -> Market
	25, // 3: CloseMarketRequest.market:type_name -> Market
	26, // 4: UpdateMarketFeeRequest.market_with_fee:type_name -> MarketWithFee
	26, // 5: UpdateMarketFeeReply.market_with_fee:type_name -> MarketWithFee
	25, // 6: UpdateMarketPriceRequest.market:type_name -> Market
	27, // 7: UpdateMarketPriceRequest.price:type_name -> Price
	25, // 8: WithdrawMarketRequest.market:type_name -> Market
	28, // 9: WithdrawMarketRequest.balance_to_withdraw:type_name -> Balance
	0,  // 10: ListSwapsRequest.status:type_name -> SwapStatus
	23, // 11: ListSwapsReply.swaps:type_name -> SwapInfo
	25, // 12: ReportMarketFeeRequest.market:type_name -> Market
	29, // 13: ReportMarketFeeReply.collected_fees:type_name -> Fee
	24, // 14: ReportMarketFeeReply.total_collected_fees_per_asset:type_name -> ReportMarketFeeReply.TotalCollectedFeesPerAssetEntry
	0,  // 15: SwapInfo.status:type_name -> SwapStatus
	29, // 16: SwapInfo.market_fee:type_name -> Fee
	1,  // 17: Operator.DepositMarket:input_type -> DepositMarketRequest
	3,  // 18: Operator.ListDepositMarket:input_type -> ListDepositMarketRequest
	5,  // 19: Operator.DepositFeeAccount:input_type -> DepositFeeAccountRequest
	7,  // 20: Operator.BalanceFeeAccount:input_type -> BalanceFeeAccountRequest
	9,  // 21: Operator.OpenMarket:input_type -> OpenMarketRequest
	11, // 22: Operator.CloseMarket:input_type -> CloseMarketRequest
	15, // 23: Operator.UpdateMarketPrice:input_type -> UpdateMarketPriceRequest
	13, // 24: Operator.UpdateMarketFee:input_type -> UpdateMarketFeeRequest
	17, // 25: Operator.WithdrawMarket:input_type -> WithdrawMarketRequest
	19, // 26: Operator.ListSwaps:input_type -> ListSwapsRequest
	21, // 27: Operator.ReportMarketFee:input_type -> ReportMarketFeeRequest
	2,  // 28: Operator.DepositMarket:output_type -> DepositMarketReply
	4,  // 29: Operator.ListDepositMarket:output_type -> ListDepositMarketReply
	6,  // 30: Operator.DepositFeeAccount:output_type -> DepositFeeAccountReply
	8,  // 31: Operator.BalanceFeeAccount:output_type -> BalanceFeeAccountReply
	10, // 32: Operator.OpenMarket:output_type -> OpenMarketReply
	12, // 33: Operator.CloseMarket:output_type -> CloseMarketReply
	16, // 34: Operator.UpdateMarketPrice:output_type -> UpdateMarketPriceReply
	14, // 35: Operator.UpdateMarketFee:output_type -> UpdateMarketFeeReply
	18, // 36: Operator.WithdrawMarket:output_type -> WithdrawMarketReply
	20, // 37: Operator.ListSwaps:output_type -> ListSwapsReply
	22, // 38: Operator.ReportMarketFee:output_type -> ReportMarketFeeReply
	28, // [28:39] is the sub-list for method output_type
	17, // [17:28] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_operator_proto_init() }
func file_operator_proto_init() {
	if File_operator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFeeAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFeeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceFeeAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceFeeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwapsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportMarketFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportMarketFeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_operator_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_operator_proto_goTypes,
		DependencyIndexes: file_operator_proto_depIdxs,
		EnumInfos:         file_operator_proto_enumTypes,
		MessageInfos:      file_operator_proto_msgTypes,
	}.Build()
	File_operator_proto = out.File
	file_operator_proto_rawDesc = nil
	file_operator_proto_goTypes = nil
	file_operator_proto_depIdxs = nil
}
